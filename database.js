// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
const database = {
  // –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  "–ø—Ä–∏–≤–µ—Ç": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?",
  "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
  "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ": "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?",
  "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å": "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å!",
  "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä": "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?",

  // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –±–æ—Ç–µ
  "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç": "–ú–µ–Ω—è –∑–æ–≤—É—Ç AI Assistant. –Ø –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!",
  "–∫—Ç–æ —Ç—ã": "–Ø AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∏—Ö –≤–æ–ø—Ä–æ—Å—ã.",
  "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å": "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É –∏ –ø–æ–º–æ–≥–∞—Ç—å —Å –ø–æ–∏—Å–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –£ –º–µ–Ω—è –µ—Å—Ç—å –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–µ–º–∞–º.",
  "–∫–∞–∫ –¥–µ–ª–∞": "–°–ø–∞—Å–∏–±–æ, —É –º–µ–Ω—è –≤—Å—ë —Ö–æ—Ä–æ—à–æ! –Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å. –ö–∞–∫ —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω –≤–∞–º?",

  // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ–º—ã
  "—á—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç - —ç—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç. –≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —É—á–∏—Ç—å—Å—è, —Ä–∞—Å—Å—É–∂–¥–∞—Ç—å –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è.",
  "–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å": "–ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –º–æ–∑–≥–∞. –û–Ω–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —É–∑–ª–æ–≤ (–Ω–µ–π—Ä–æ–Ω–æ–≤), –∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —É—á–∞—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.",
  "—á—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ": "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ - —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —É–ª—É—á—à–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—ã—Ç–∞ –±–µ–∑ —è–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –≠—Ç–æ –∫–ª—é—á–µ–≤–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.",

  // –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
  "–∫–∞–∫ –Ω–∞—É—á–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å": "–ù–∞—á–Ω–∏—Ç–µ —Å –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤ (HTML, CSS, JavaScript). –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω-—Ä–µ—Å—É—Ä—Å—ã, –ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ —Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.",
  "–∫–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —É—á–∏—Ç—å": "JavaScript –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞. –û–Ω —à–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∏–º–µ–µ—Ç –ø—Ä–æ—Å—Ç–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞–∫ –≤–µ–±-—Å–∞–π—Ç—ã, —Ç–∞–∫ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
  "—á—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–¥": "–ö–æ–¥ - —ç—Ç–æ –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –≠—Ç–æ –∫–∞–∫ —Ä–µ—Ü–µ–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å.",

  // –ü—Ä–æ—â–∞–Ω–∏—è
  "–ø–æ–∫–∞": "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë—ã–ª–æ –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è! üëã",
  "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è": "–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –µ—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã! üòä",
  "—Å–ø–∞—Å–∏–±–æ": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å! üòä",
  "–±–ª–∞–≥–æ–¥–∞—Ä—é": "–ù–µ –∑–∞ —á—Ç–æ! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë! üåü"
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function processMessage(text) {
  // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
  const normalizedText = text.toLowerCase().trim()
    .replace(/[.,!?]/g, '')
    .replace(/\s+/g, ' ');

  // –ü–æ–∏—Å–∫ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  if (database[normalizedText]) {
    return database[normalizedText];
  }

  // –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ñ—Ä–∞–∑
  const words = normalizedText.split(' ');
  let bestMatch = {
    response: '',
    confidence: 0
  };

  for (const key of Object.keys(database)) {
    const keyWords = key.split(' ');
    let matchCount = 0;

    for (const word of words) {
      if (keyWords.includes(word)) {
        matchCount++;
      }
    }

    const confidence = matchCount / Math.max(words.length, keyWords.length);

    if (confidence > bestMatch.confidence && confidence > 0.3) {
      bestMatch = {
        response: database[key],
        confidence: confidence
      };
    }
  }

  return bestMatch.confidence > 0
    ? bestMatch.response
    : "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å?";
}
